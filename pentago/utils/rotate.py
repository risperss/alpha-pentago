"""Used to generate the lookup table for rotating a board 90 degrees"""

rows = [
    "000000",
    "000001",
    "000010",
    "000011",
    "000100",
    "000101",
    "000110",
    "000111",
    "001000",
    "001001",
    "001010",
    "001011",
    "001100",
    "001101",
    "001110",
    "001111",
    "010000",
    "010001",
    "010010",
    "010011",
    "010100",
    "010101",
    "010110",
    "010111",
    "011000",
    "011001",
    "011010",
    "011011",
    "011100",
    "011101",
    "011110",
    "011111",
    "100000",
    "100001",
    "100010",
    "100011",
    "100100",
    "100101",
    "100110",
    "100111",
    "101000",
    "101001",
    "101010",
    "101011",
    "101100",
    "101101",
    "101110",
    "101111",
    "110000",
    "110001",
    "110010",
    "110011",
    "110100",
    "110101",
    "110110",
    "110111",
    "111000",
    "111001",
    "111010",
    "111011",
    "111100",
    "111101",
    "111110",
    "111111",
]

assert len(rows) == 64

def rotate90(row):
    z = "00000"
    return row[5] + z + row[4] + z + row[3] + z + row[2] + z + row[1] + z + row[0]

def rotate270(row):
    z = "00000"
    return row[0] + z + row[1] + z + row[2] + z + row[3] + z + row[4] + z + row[5]

for i, row in enumerate(rows):
    assert int(row, 2) == i

    # rotated_row = rotate90(row)
    rotated_row = rotate270(row)

    assert len(rotated_row) == 31

    value = int(rotated_row, 2)

    s = "0x%08X" % value

    print(s + "ULL,")
    # print("0b", row, ",", sep="")
    # print("0b", rotated_row, ",", sep="")
